<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Uploaded Files</title>
  <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
  <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css" rel="stylesheet">
  <style>
    .folder-row i {
      color: #007bff;
    }

    .file-row i {
      color: #6c757d;
    }

    .custom-dropdown {
      position: relative;
      display: inline-block;
    }

    .custom-dropdown .dropdown-menu {
      display: none;
      position: absolute;
      top: 100%;
      left: 0;
      z-index: 1000;
    }

    .custom-dropdown.show .dropdown-menu {
      display: block;
    }

    .folder-row i {
      color: #007bff;
    }

    .file-row i {
      color: #6c757d;
    }
  </style>
</head>

<body>
  <%- include('./Layouts/Header'); %>
    <nav class="navbar navbar-expand-lg navbar-light bg-light">
      <div class="collapse navbar-collapse" id="navbarNav">
        <ul class="navbar-nav ml-auto">
          <% if (user) { %>
            <li class="nav-item">
              <a class="nav-link" href="#">Welcome, <%= user.username %></a>
            </li>
            <li class="nav-item">
              <form action="/logout" method="GET" style="display: inline;">
                <button type="submit" class="btn btn-link nav-link"
                  style="display: inline; cursor: pointer;">Logout</button>
              </form>
            </li>
            <% } else { %>
              <li class="nav-item">
                <a class="nav-link" href="/login">Login</a>
              </li>
              <li class="nav-item">
                <a class="nav-link" href="/register">Register</a>
              </li>
              <% } %>
        </ul>
      </div>
    </nav>
    <div class="container mt-5">
      <div class="row mb-4">
        <div class="col-md-6">
          <h1 style="font-family: Georgia, 'Times New Roman', Times, serif;">Uploaded Files & Folders</h1>
        </div>
        <div class="col-md-6 text-right">
          <div class="input-group">
            <input type="text" id="searchInput" class="form-control" placeholder="Search...">
            <div class="input-group-append">
              <button class="btn btn-primary" onclick="searchFiles()">Search</button>
            </div>
          </div>
        </div>
      </div>
      <div class="row mb-4">
        <div class="col-md-12 text-right">
          <div class="custom-dropdown">
            <button type="button" class="btn btn-secondary dropdown-toggle" aria-haspopup="true" aria-expanded="false"
              onclick="toggleDropdown('filterDropdown')">
              Filter Files
            </button>
            <div class="dropdown-menu" id="filterDropdown">
              <a class="dropdown-item" href="#" onclick="filterFiles('individual'); toggleDropdown('filterDropdown')">My
                Files</a>
              <a class="dropdown-item" href="#"
                onclick="filterFiles('all'); toggleDropdown('filterDropdown')">Department Files</a>
            </div>
            <button type="button" class="btn btn-secondary ml-2" onclick="showCreateFolderModal()">Create
              Folder</button>
          </div>
        </div>
      </div>
      <div class="table-responsive">
        <table class="table table-bordered">    
            <% if (folders.length > 0) { %>
                <div class="table-responsive">
                    <table class="table table-bordered">
                        <thead class="thead-light">
                            <tr class="folder-row">
                                <th>SI No</th>
                                <th>File Name</th>
                                <th>Upload Date</th>
                                <th>Uploaded By</th>
                                <th>Department</th>
                            </tr>
                        </thead>
                        <tbody>
                            <% folders.forEach((folder, index) => { %>
                                <tr>
                                    <td ><%= index + 1 %></td>
                                    <td><i class="fas fa-folder"></i> <a href="/testcheck/<%= folder.path %>">
                                        <%= folder.folderName %>
                                      </a></td>
                                    
                                    <td><%= folder.createdAt ? folder.createdAt.toDateString() : 'N/A' %></td>
                                    <td><%= folder.createdBy.username %></td>
                                    <td><%= folder.department || 'N/A' %></td>
                                </tr>
                            <% }); %>
                        </tbody>
                    </table>
                </div>
        
                <!-- Pagination -->
                <div class="pagination">
                    <% if (currentPage > 1) { %>
                        <a href="?page=<%= currentPage - 1 %>&limit=<%= limit %>">Previous</a>
                    <% } %>
                    
                    Page <%= currentPage %> of <%= totalPages %>
                    
                    <% if (currentPage < totalPages) { %>
                        <a href="?page=<%= currentPage + 1 %>&limit=<%= limit %>">Next</a>
                    <% } %>
                </div>
            <% } else { %>
                <p>No folders found.</p>
            <% } %>
            
            <a href="/upload">Go Back</a>


        </table>
      </div>
      <nav aria-label="Page navigation">
        <ul class="pagination">
          <% for (let i=1; i <=totalPages; i++) { %>
            <li class="page-item <%= currentPage === i ? 'active' : '' %>">
              <a class="page-link" href="?page=<%= i %>&limit=<%= limit %>">
                <%= i %>
              </a>
            </li>
            <% } %>
        </ul>
      </nav>
    </div>
    <script>
      function searchFiles() {
        const searchInput = document.getElementById('searchInput').value.trim().toLowerCase();
        const rows = document.querySelectorAll('.file-row, .folder-row');
        rows.forEach(row => {
          const fileName = row.cells[1].textContent.trim().toLowerCase();
          if (fileName.includes(searchInput)) {
            row.style.display = '';
          } else {
            row.style.display = 'none';
          }
        });
      }

      function formatFileSize(size) {
        if (size < 1024) return size + ' B';
        if (size < 1048576) return (size / 1024).toFixed(1) + ' KB';
        return (size / 1048576).toFixed(1) + ' MB';
      }

      function toggleDropdown(id) {
        const dropdown = document.getElementById(id);
        dropdown.classList.toggle('show');
      }

      function filterFiles(type) {
        const rows = document.querySelectorAll('.file-row, .folder-row');
        let anyFileDisplayed = false;
        rows.forEach(row => {
          const dataType = row.getAttribute('data-type');
          if (type === 'all') {
            row.style.display = '';
            anyFileDisplayed = true;
          } else if (type === 'individual') {
            if (dataType === 'individual') {
              row.style.display = '';
              anyFileDisplayed = true;
            } else {
              row.style.display = 'none';
            }
          }
        });
        checkIfNoFilesDisplayed(anyFileDisplayed);
      }

      function checkIfNoFilesDisplayed(anyFileDisplayed) {
        const noFilesRow = document.querySelector('#fileTableBody .no-files-row');
        if (!anyFileDisplayed) {
          if (!noFilesRow) {
            const noFilesRowHtml = '<tr class="no-files-row"><td colspan="6" class="text-center">No files have been uploaded.</td></tr>';
            document.getElementById('fileTableBody').insertAdjacentHTML('beforeend', noFilesRowHtml);
          } else {
            noFilesRow.style.display = '';
          }
        } else if (noFilesRow) {
          noFilesRow.style.display = 'none';
        }
      }

      function getFileIcon(fileName) {
        const ext = fileName.split('.').pop().toLowerCase();
        switch (ext) {
          case 'pdf':
            return 'fas fa-file-pdf';
          case 'doc':
          case 'docx':
            return 'fas fa-file-word';
          case 'xls':
          case 'xlsx':
            return 'fas fa-file-excel';
          case 'ppt':
          case 'pptx':
            return 'fas fa-file-powerpoint';
          case 'jpg':
          case 'jpeg':
          case 'png':
          case 'gif':
            return 'fas fa-file-image';
          case 'zip':
          case 'rar':
            return 'fas fa-file-archive';
          case 'txt':
            return 'fas fa-file-alt';
          default:
            return 'fas fa-file';
        }
      }
    </script><!-- Modal -->
  <div class="modal fade" id="createFolderModal" tabindex="-1" role="dialog" aria-labelledby="createFolderModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="createFolderModalLabel">Create Folder</h5>
          <button type="button" class="close" data-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">&times;</span>
          </button>
        </div>
        <form id="folderForm">
          <div class="modal-body">
            <label for="folderName" class="sr-only">Folder Name</label>
            <input type="text" id="folderName" name="folderName" class="form-control" placeholder="Enter folder name" required>
          </div>
        </form>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
          <button type="submit" class="btn btn-primary" form="folderForm">Create</button>
        </div>
      </div>
    </div>
  </div>
  
  <script>
    function showCreateFolderModal() {
      $('#createFolderModal').modal('show');
    }
  
    document.getElementById("folderForm").addEventListener("submit", async function (event) {
      event.preventDefault(); // Prevent default form submission
  
      let folderName = document.getElementById("folderName").value.trim();
      console.log("📤 Sending Folder Name:", folderName); // 🔍 Debugging
  
      if (!folderName) {
        alert("Please enter a folder name.");
        return;
      }
  
      try {
        let response = await fetch('/create-folder', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ folderName })
        });
  
        let result = await response.json();
        console.log("📬 Server Response:", result); // 🔍 Debugging
  
        if (response.ok) {
          alert("Folder created successfully.");
          $('#createFolderModal').modal('hide');
        } else {
          alert("Error: " + (result.error || "Failed to create folder."));
        }
      } catch (error) {
        console.error("Error:", error);
        alert("Failed to create folder.");
      }
    });
  </script>

    <%- include('./Layouts/Footer'); %>
</body>

</html>